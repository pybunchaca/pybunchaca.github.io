"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9924],{491:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d});var l=a(7294),r=a(6010),s=a(9960),n=a(8824),o=a(1944),c=a(5281),u=a(5999),i=a(5272),m=a(197);function g(e){let{doc:t}=e;return l.createElement("article",{className:"margin-vert--lg"},l.createElement(s.default,{to:t.permalink},l.createElement("h2",null,t.title)),t.description&&l.createElement("p",null,t.description))}function d(e){let{tag:t}=e;const a=function(){const{selectMessage:e}=(0,n.usePluralForm)();return t=>e(t,(0,u.translate)({id:"theme.docs.tagDocListPageTitle.nDocsTagged",description:'Pluralized label for "{count} docs tagged". Use as much plural forms (separated by "|") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',message:"One doc tagged|{count} docs tagged"},{count:t}))}(),d=(0,u.translate)({id:"theme.docs.tagDocListPageTitle",description:"The title of the page for a docs tag",message:'{nDocsTagged} with "{tagName}"'},{nDocsTagged:a(t.count),tagName:t.label});return l.createElement(o.HtmlClassNameProvider,{className:(0,r.default)(c.ThemeClassNames.wrapper.docsPages,c.ThemeClassNames.page.docsTagDocListPage)},l.createElement(o.PageMetadata,{title:d}),l.createElement(m.default,{tag:"doc_tag_doc_list"}),l.createElement(i.default,null,l.createElement("div",{className:"container margin-vert--lg"},l.createElement("div",{className:"row"},l.createElement("main",{className:"col col--8 col--offset-2"},l.createElement("header",{className:"margin-bottom--xl"},l.createElement("h1",null,d),l.createElement(s.default,{href:t.allTagsPath},l.createElement(u.default,{id:"theme.tags.tagsPageLink",description:"The label of the link targeting the tag list page"},"View All Tags"))),l.createElement("section",{className:"margin-vert--lg"},t.items.map((e=>l.createElement(g,{key:e.id,doc:e})))))))))}},8824:(e,t,a)=>{a.r(t),a.d(t,{usePluralForm:()=>u});var l=a(7294),r=a(2263);const s=["zero","one","two","few","many","other"];function n(e){return s.filter((t=>e.includes(t)))}const o={locale:"en",pluralForms:n(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,r.default)();return(0,l.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:n(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),o}}),[e])}function u(){const e=c();return{selectMessage:(t,a)=>function(e,t,a){const l=e.split("|");if(1===l.length)return l[0];l.length>a.pluralForms.length&&console.error(`For locale=${a.locale}, a maximum of ${a.pluralForms.length} plural forms are expected (${a.pluralForms.join(",")}), but the message contains ${l.length}: ${e}`);const r=a.select(t),s=a.pluralForms.indexOf(r);return l[Math.min(s,l.length-1)]}(a,t,e)}}}}]);